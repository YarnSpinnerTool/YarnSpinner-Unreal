// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler_output.proto

#include "compiler_output.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Yarn {
PROTOBUF_CONSTEXPR CompilerOutput_StringsEntry_DoNotUse::CompilerOutput_StringsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct CompilerOutput_StringsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompilerOutput_StringsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompilerOutput_StringsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CompilerOutput_StringsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompilerOutput_StringsEntry_DoNotUseDefaultTypeInternal _CompilerOutput_StringsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR CompilerOutput::CompilerOutput(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.strings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.diagnostics_)*/{}
  , /*decltype(_impl_.program_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CompilerOutputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompilerOutputDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompilerOutputDefaultTypeInternal() {}
  union {
    CompilerOutput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompilerOutputDefaultTypeInternal _CompilerOutput_default_instance_;
PROTOBUF_CONSTEXPR Range::Range(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_.end_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeDefaultTypeInternal() {}
  union {
    Range _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeDefaultTypeInternal _Range_default_instance_;
PROTOBUF_CONSTEXPR Position::Position(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.line_)*/0
  , /*decltype(_impl_.character_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;
PROTOBUF_CONSTEXPR Diagnostic::Diagnostic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.range_)*/nullptr
  , /*decltype(_impl_.severity_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiagnosticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiagnosticDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiagnosticDefaultTypeInternal() {}
  union {
    Diagnostic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiagnosticDefaultTypeInternal _Diagnostic_default_instance_;
PROTOBUF_CONSTEXPR StringInfo::StringInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StringInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringInfoDefaultTypeInternal() {}
  union {
    StringInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringInfoDefaultTypeInternal _StringInfo_default_instance_;
}  // namespace Yarn
static ::_pb::Metadata file_level_metadata_compiler_5foutput_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_compiler_5foutput_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_compiler_5foutput_2eproto = nullptr;

const uint32_t TableStruct_compiler_5foutput_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput_StringsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput_StringsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput_StringsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput_StringsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput, _impl_.program_),
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput, _impl_.strings_),
  PROTOBUF_FIELD_OFFSET(::Yarn::CompilerOutput, _impl_.diagnostics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Yarn::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::Range, _impl_.start_),
  PROTOBUF_FIELD_OFFSET(::Yarn::Range, _impl_.end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Yarn::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::Position, _impl_.line_),
  PROTOBUF_FIELD_OFFSET(::Yarn::Position, _impl_.character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Yarn::Diagnostic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::Diagnostic, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::Yarn::Diagnostic, _impl_.severity_),
  PROTOBUF_FIELD_OFFSET(::Yarn::Diagnostic, _impl_.range_),
  PROTOBUF_FIELD_OFFSET(::Yarn::Diagnostic, _impl_.filename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Yarn::StringInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Yarn::StringInfo, _impl_.text_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::Yarn::CompilerOutput_StringsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::Yarn::CompilerOutput)},
  { 19, -1, -1, sizeof(::Yarn::Range)},
  { 27, -1, -1, sizeof(::Yarn::Position)},
  { 35, -1, -1, sizeof(::Yarn::Diagnostic)},
  { 45, -1, -1, sizeof(::Yarn::StringInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Yarn::_CompilerOutput_StringsEntry_DoNotUse_default_instance_._instance,
  &::Yarn::_CompilerOutput_default_instance_._instance,
  &::Yarn::_Range_default_instance_._instance,
  &::Yarn::_Position_default_instance_._instance,
  &::Yarn::_Diagnostic_default_instance_._instance,
  &::Yarn::_StringInfo_default_instance_._instance,
};

const char descriptor_table_protodef_compiler_5foutput_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025compiler_output.proto\022\004Yarn\032\022yarn_spin"
  "ner.proto\"\315\001\n\016CompilerOutput\022\036\n\007program\030"
  "\001 \001(\0132\r.Yarn.Program\0222\n\007strings\030\002 \003(\0132!."
  "Yarn.CompilerOutput.StringsEntry\022%\n\013diag"
  "nostics\030\003 \003(\0132\020.Yarn.Diagnostic\032@\n\014Strin"
  "gsEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.Ya"
  "rn.StringInfo:\0028\001\"C\n\005Range\022\035\n\005start\030\001 \001("
  "\0132\016.Yarn.Position\022\033\n\003end\030\002 \001(\0132\016.Yarn.Po"
  "sition\"+\n\010Position\022\014\n\004line\030\001 \001(\005\022\021\n\tchar"
  "acter\030\002 \001(\005\"\246\001\n\nDiagnostic\022\017\n\007message\030\001 "
  "\001(\t\022+\n\010severity\030\002 \001(\0162\031.Yarn.Diagnostic."
  "Severity\022\032\n\005range\030\003 \001(\0132\013.Yarn.Range\022\020\n\010"
  "fileName\030\004 \001(\t\",\n\010Severity\022\t\n\005Error\020\000\022\013\n"
  "\007Warning\020\001\022\010\n\004Info\020\002\"\032\n\nStringInfo\022\014\n\004te"
  "xt\030\001 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_compiler_5foutput_2eproto_deps[1] = {
  &::descriptor_table_yarn_5fspinner_2eproto,
};
static ::_pbi::once_flag descriptor_table_compiler_5foutput_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_compiler_5foutput_2eproto = {
    false, false, 576, descriptor_table_protodef_compiler_5foutput_2eproto,
    "compiler_output.proto",
    &descriptor_table_compiler_5foutput_2eproto_once, descriptor_table_compiler_5foutput_2eproto_deps, 1, 6,
    schemas, file_default_instances, TableStruct_compiler_5foutput_2eproto::offsets,
    file_level_metadata_compiler_5foutput_2eproto, file_level_enum_descriptors_compiler_5foutput_2eproto,
    file_level_service_descriptors_compiler_5foutput_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_compiler_5foutput_2eproto_getter() {
  return &descriptor_table_compiler_5foutput_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_compiler_5foutput_2eproto(&descriptor_table_compiler_5foutput_2eproto);
namespace Yarn {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Diagnostic_Severity_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_compiler_5foutput_2eproto);
  return file_level_enum_descriptors_compiler_5foutput_2eproto[0];
}
bool Diagnostic_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Diagnostic_Severity Diagnostic::Error;
constexpr Diagnostic_Severity Diagnostic::Warning;
constexpr Diagnostic_Severity Diagnostic::Info;
constexpr Diagnostic_Severity Diagnostic::Severity_MIN;
constexpr Diagnostic_Severity Diagnostic::Severity_MAX;
constexpr int Diagnostic::Severity_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

CompilerOutput_StringsEntry_DoNotUse::CompilerOutput_StringsEntry_DoNotUse() {}
CompilerOutput_StringsEntry_DoNotUse::CompilerOutput_StringsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CompilerOutput_StringsEntry_DoNotUse::MergeFrom(const CompilerOutput_StringsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CompilerOutput_StringsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[0]);
}

// ===================================================================

class CompilerOutput::_Internal {
 public:
  static const ::Yarn::Program& program(const CompilerOutput* msg);
};

const ::Yarn::Program&
CompilerOutput::_Internal::program(const CompilerOutput* msg) {
  return *msg->_impl_.program_;
}
void CompilerOutput::clear_program() {
  if (GetArenaForAllocation() == nullptr && _impl_.program_ != nullptr) {
    delete _impl_.program_;
  }
  _impl_.program_ = nullptr;
}
CompilerOutput::CompilerOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &CompilerOutput::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:Yarn.CompilerOutput)
}
CompilerOutput::CompilerOutput(const CompilerOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CompilerOutput* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.strings_)*/{}
    , decltype(_impl_.diagnostics_){from._impl_.diagnostics_}
    , decltype(_impl_.program_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.strings_.MergeFrom(from._impl_.strings_);
  if (from._internal_has_program()) {
    _this->_impl_.program_ = new ::Yarn::Program(*from._impl_.program_);
  }
  // @@protoc_insertion_point(copy_constructor:Yarn.CompilerOutput)
}

inline void CompilerOutput::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.strings_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.diagnostics_){arena}
    , decltype(_impl_.program_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CompilerOutput::~CompilerOutput() {
  // @@protoc_insertion_point(destructor:Yarn.CompilerOutput)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void CompilerOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.strings_.Destruct();
  _impl_.strings_.~MapField();
  _impl_.diagnostics_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.program_;
}

void CompilerOutput::ArenaDtor(void* object) {
  CompilerOutput* _this = reinterpret_cast< CompilerOutput* >(object);
  _this->_impl_.strings_.Destruct();
}
void CompilerOutput::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CompilerOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:Yarn.CompilerOutput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.strings_.Clear();
  _impl_.diagnostics_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.program_ != nullptr) {
    delete _impl_.program_;
  }
  _impl_.program_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompilerOutput::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Yarn.Program program = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_program(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .Yarn.StringInfo> strings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.strings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Yarn.Diagnostic diagnostics = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_diagnostics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompilerOutput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Yarn.CompilerOutput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Yarn.Program program = 1;
  if (this->_internal_has_program()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::program(this),
        _Internal::program(this).GetCachedSize(), target, stream);
  }

  // map<string, .Yarn.StringInfo> strings = 2;
  if (!this->_internal_strings().empty()) {
    using MapType = ::_pb::Map<std::string, ::Yarn::StringInfo>;
    using WireHelper = CompilerOutput_StringsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_strings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "Yarn.CompilerOutput.StringsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .Yarn.Diagnostic diagnostics = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_diagnostics_size()); i < n; i++) {
    const auto& repfield = this->_internal_diagnostics(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Yarn.CompilerOutput)
  return target;
}

size_t CompilerOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Yarn.CompilerOutput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .Yarn.StringInfo> strings = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_strings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::Yarn::StringInfo >::const_iterator
      it = this->_internal_strings().begin();
      it != this->_internal_strings().end(); ++it) {
    total_size += CompilerOutput_StringsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .Yarn.Diagnostic diagnostics = 3;
  total_size += 1UL * this->_internal_diagnostics_size();
  for (const auto& msg : this->_impl_.diagnostics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Yarn.Program program = 1;
  if (this->_internal_has_program()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.program_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompilerOutput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CompilerOutput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompilerOutput::GetClassData() const { return &_class_data_; }


void CompilerOutput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CompilerOutput*>(&to_msg);
  auto& from = static_cast<const CompilerOutput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Yarn.CompilerOutput)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.strings_.MergeFrom(from._impl_.strings_);
  _this->_impl_.diagnostics_.MergeFrom(from._impl_.diagnostics_);
  if (from._internal_has_program()) {
    _this->_internal_mutable_program()->::Yarn::Program::MergeFrom(
        from._internal_program());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompilerOutput::CopyFrom(const CompilerOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Yarn.CompilerOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompilerOutput::IsInitialized() const {
  return true;
}

void CompilerOutput::InternalSwap(CompilerOutput* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.strings_.InternalSwap(&other->_impl_.strings_);
  _impl_.diagnostics_.InternalSwap(&other->_impl_.diagnostics_);
  swap(_impl_.program_, other->_impl_.program_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompilerOutput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[1]);
}

// ===================================================================

class Range::_Internal {
 public:
  static const ::Yarn::Position& start(const Range* msg);
  static const ::Yarn::Position& end(const Range* msg);
};

const ::Yarn::Position&
Range::_Internal::start(const Range* msg) {
  return *msg->_impl_.start_;
}
const ::Yarn::Position&
Range::_Internal::end(const Range* msg) {
  return *msg->_impl_.end_;
}
Range::Range(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Yarn.Range)
}
Range::Range(const Range& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Range* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){nullptr}
    , decltype(_impl_.end_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::Yarn::Position(*from._impl_.start_);
  }
  if (from._internal_has_end()) {
    _this->_impl_.end_ = new ::Yarn::Position(*from._impl_.end_);
  }
  // @@protoc_insertion_point(copy_constructor:Yarn.Range)
}

inline void Range::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){nullptr}
    , decltype(_impl_.end_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:Yarn.Range)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Range::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.start_;
  if (this != internal_default_instance()) delete _impl_.end_;
}

void Range::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:Yarn.Range)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.end_ != nullptr) {
    delete _impl_.end_;
  }
  _impl_.end_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Range::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Yarn.Position start = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Yarn.Position end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Range::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Yarn.Range)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Yarn.Position start = 1;
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  // .Yarn.Position end = 2;
  if (this->_internal_has_end()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::end(this),
        _Internal::end(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Yarn.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Yarn.Range)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Yarn.Position start = 1;
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  // .Yarn.Position end = 2;
  if (this->_internal_has_end()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.end_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Range::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Range::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Range::GetClassData() const { return &_class_data_; }


void Range::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Range*>(&to_msg);
  auto& from = static_cast<const Range&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Yarn.Range)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::Yarn::Position::MergeFrom(
        from._internal_start());
  }
  if (from._internal_has_end()) {
    _this->_internal_mutable_end()->::Yarn::Position::MergeFrom(
        from._internal_end());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Yarn.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::InternalSwap(Range* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Range, _impl_.end_)
      + sizeof(Range::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(Range, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Range::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[2]);
}

// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Yarn.Position)
}
Position::Position(const Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Position* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.line_){}
    , decltype(_impl_.character_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.line_, &from._impl_.line_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.character_) -
    reinterpret_cast<char*>(&_impl_.line_)) + sizeof(_impl_.character_));
  // @@protoc_insertion_point(copy_constructor:Yarn.Position)
}

inline void Position::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.line_){0}
    , decltype(_impl_.character_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:Yarn.Position)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Position::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Position::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Yarn.Position)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.character_) -
      reinterpret_cast<char*>(&_impl_.line_)) + sizeof(_impl_.character_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Position::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 line = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 character = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.character_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Position::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Yarn.Position)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 line = 1;
  if (this->_internal_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_line(), target);
  }

  // int32 character = 2;
  if (this->_internal_character() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_character(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Yarn.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Yarn.Position)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 line = 1;
  if (this->_internal_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_line());
  }

  // int32 character = 2;
  if (this->_internal_character() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_character());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Position::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Position::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Position::GetClassData() const { return &_class_data_; }


void Position::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Yarn.Position)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_line() != 0) {
    _this->_internal_set_line(from._internal_line());
  }
  if (from._internal_character() != 0) {
    _this->_internal_set_character(from._internal_character());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Yarn.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::InternalSwap(Position* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.character_)
      + sizeof(Position::_impl_.character_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.line_)>(
          reinterpret_cast<char*>(&_impl_.line_),
          reinterpret_cast<char*>(&other->_impl_.line_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[3]);
}

// ===================================================================

class Diagnostic::_Internal {
 public:
  static const ::Yarn::Range& range(const Diagnostic* msg);
};

const ::Yarn::Range&
Diagnostic::_Internal::range(const Diagnostic* msg) {
  return *msg->_impl_.range_;
}
Diagnostic::Diagnostic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Yarn.Diagnostic)
}
Diagnostic::Diagnostic(const Diagnostic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Diagnostic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.filename_){}
    , decltype(_impl_.range_){nullptr}
    , decltype(_impl_.severity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filename().empty()) {
    _this->_impl_.filename_.Set(from._internal_filename(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_range()) {
    _this->_impl_.range_ = new ::Yarn::Range(*from._impl_.range_);
  }
  _this->_impl_.severity_ = from._impl_.severity_;
  // @@protoc_insertion_point(copy_constructor:Yarn.Diagnostic)
}

inline void Diagnostic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.filename_){}
    , decltype(_impl_.range_){nullptr}
    , decltype(_impl_.severity_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Diagnostic::~Diagnostic() {
  // @@protoc_insertion_point(destructor:Yarn.Diagnostic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Diagnostic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  _impl_.filename_.Destroy();
  if (this != internal_default_instance()) delete _impl_.range_;
}

void Diagnostic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Diagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:Yarn.Diagnostic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.range_ != nullptr) {
    delete _impl_.range_;
  }
  _impl_.range_ = nullptr;
  _impl_.severity_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Diagnostic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Yarn.Diagnostic.message"));
        } else
          goto handle_unusual;
        continue;
      // .Yarn.Diagnostic.Severity severity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_severity(static_cast<::Yarn::Diagnostic_Severity>(val));
        } else
          goto handle_unusual;
        continue;
      // .Yarn.Range range = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_range(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fileName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_filename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Yarn.Diagnostic.fileName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Diagnostic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Yarn.Diagnostic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Yarn.Diagnostic.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  // .Yarn.Diagnostic.Severity severity = 2;
  if (this->_internal_severity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_severity(), target);
  }

  // .Yarn.Range range = 3;
  if (this->_internal_has_range()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::range(this),
        _Internal::range(this).GetCachedSize(), target, stream);
  }

  // string fileName = 4;
  if (!this->_internal_filename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Yarn.Diagnostic.fileName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Yarn.Diagnostic)
  return target;
}

size_t Diagnostic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Yarn.Diagnostic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string fileName = 4;
  if (!this->_internal_filename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // .Yarn.Range range = 3;
  if (this->_internal_has_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.range_);
  }

  // .Yarn.Diagnostic.Severity severity = 2;
  if (this->_internal_severity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_severity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Diagnostic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Diagnostic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Diagnostic::GetClassData() const { return &_class_data_; }


void Diagnostic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Diagnostic*>(&to_msg);
  auto& from = static_cast<const Diagnostic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Yarn.Diagnostic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_has_range()) {
    _this->_internal_mutable_range()->::Yarn::Range::MergeFrom(
        from._internal_range());
  }
  if (from._internal_severity() != 0) {
    _this->_internal_set_severity(from._internal_severity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Diagnostic::CopyFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Yarn.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diagnostic::IsInitialized() const {
  return true;
}

void Diagnostic::InternalSwap(Diagnostic* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filename_, lhs_arena,
      &other->_impl_.filename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Diagnostic, _impl_.severity_)
      + sizeof(Diagnostic::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(Diagnostic, _impl_.range_)>(
          reinterpret_cast<char*>(&_impl_.range_),
          reinterpret_cast<char*>(&other->_impl_.range_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Diagnostic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[4]);
}

// ===================================================================

class StringInfo::_Internal {
 public:
};

StringInfo::StringInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Yarn.StringInfo)
}
StringInfo::StringInfo(const StringInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StringInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Yarn.StringInfo)
}

inline void StringInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StringInfo::~StringInfo() {
  // @@protoc_insertion_point(destructor:Yarn.StringInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StringInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void StringInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StringInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Yarn.StringInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StringInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Yarn.StringInfo.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StringInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Yarn.StringInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Yarn.StringInfo.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Yarn.StringInfo)
  return target;
}

size_t StringInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Yarn.StringInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StringInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StringInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StringInfo::GetClassData() const { return &_class_data_; }


void StringInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StringInfo*>(&to_msg);
  auto& from = static_cast<const StringInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Yarn.StringInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StringInfo::CopyFrom(const StringInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Yarn.StringInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringInfo::IsInitialized() const {
  return true;
}

void StringInfo::InternalSwap(StringInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StringInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_compiler_5foutput_2eproto_getter, &descriptor_table_compiler_5foutput_2eproto_once,
      file_level_metadata_compiler_5foutput_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Yarn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Yarn::CompilerOutput_StringsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::Yarn::CompilerOutput_StringsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::CompilerOutput_StringsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Yarn::CompilerOutput*
Arena::CreateMaybeMessage< ::Yarn::CompilerOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::CompilerOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::Yarn::Range*
Arena::CreateMaybeMessage< ::Yarn::Range >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::Range >(arena);
}
template<> PROTOBUF_NOINLINE ::Yarn::Position*
Arena::CreateMaybeMessage< ::Yarn::Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::Position >(arena);
}
template<> PROTOBUF_NOINLINE ::Yarn::Diagnostic*
Arena::CreateMaybeMessage< ::Yarn::Diagnostic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::Diagnostic >(arena);
}
template<> PROTOBUF_NOINLINE ::Yarn::StringInfo*
Arena::CreateMaybeMessage< ::Yarn::StringInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Yarn::StringInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
